{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./apps/cooking-ai-api/src/app/app.module.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///./apps/cooking-ai-api/src/app/recipes/recipes.module.ts","webpack:///./apps/cooking-ai-api/src/app/recipes/recipes.service.ts","webpack:///external commonjs \"@google/generative-ai\"","webpack:///./apps/cooking-ai-api/src/utils/mockRecipes.ts","webpack:///./apps/cooking-ai-api/src/app/recipes/recipes.controller.ts","webpack:///external commonjs \"dotenv\"","webpack:///external node-commonjs \"path\"","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"net\"","webpack:///webpack/bootstrap","webpack:///./apps/cooking-ai-api/src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { RecipesModule } from './recipes/recipes.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    RecipesModule,\n  ],\n})\nexport class AppModule {\n  constructor() {\n    console.log('AppModule: Loading environment variables...');\n    console.log('AppModule: GEMINI_API_KEY from process.env:', process.env.GEMINI_API_KEY);\n  }\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","import { Module } from '@nestjs/common';\nimport { RecipesService } from './recipes.service';\nimport { RecipesController } from './recipes.controller';\n\n@Module({\n  controllers: [RecipesController],\n  providers: [RecipesService],\n})\nexport class RecipesModule {}\n","import { Injectable, Logger, HttpException, HttpStatus } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { generateMockRecipes } from '../../utils/mockRecipes';\n\nexport interface Recipe {\n  title: string;\n  description: string;\n  ingredients: string[];\n  instructions: string[];\n  score: number;\n}\n\n@Injectable()\nexport class RecipesService {\n  private readonly genAI: GoogleGenerativeAI | null;\n  private readonly logger = new Logger(RecipesService.name);\n  private votes: { [recipeId: number]: { up: number; down: number } } = {};\n\n  constructor(private configService: ConfigService) {\n    this.logger.log('Initializing Google Generative AI...');\n    \n    // Try to get the API key from multiple sources\n    let apiKey = this.configService.get<string>('GEMINI_API_KEY');\n    \n    if (!apiKey) {\n      apiKey = process.env.GEMINI_API_KEY;\n      if (apiKey) {\n        this.logger.log('Using API key from process.env directly');\n      }\n    }\n    \n    if (!apiKey) {\n      this.logger.warn('WARNING: Using hardcoded API key as fallback. Not recommended for production!');\n      apiKey = 'AIzaSyBugUp9KyazmQ74XqGrntlszlzatg6ibFA';\n    }\n    \n    if (!apiKey) {\n      this.logger.warn('GEMINI_API_KEY is not set. Falling back to mock data.');\n      this.genAI = null;\n    } else {\n      this.genAI = new GoogleGenerativeAI(apiKey);\n    }\n  }\n\n  async generateRecipes(ingredients: string, cuisine: string, dietary?: string): Promise<Recipe[]> {\n    this.logger.log(`Generating recipes for ingredients: ${ingredients}, cuisine: ${cuisine}, dietary: ${dietary || 'none'}`);\n\n    if (!this.genAI) {\n      this.logger.warn('No Gemini API available. Using mock data.');\n      return generateMockRecipes(ingredients, cuisine, dietary || 'none');\n    }\n\n    const model = this.genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });\n\n    // Dietary prompt adjustment\n    const dietaryPrompt = dietary ? `, adhering to ${dietary} dietary preferences` : '';\n    const promptBase = `\n      Generate a detailed ${cuisine} recipe using the following ingredients: ${ingredients}${dietaryPrompt}.\n      Ensure the recipe is unique in style and preparation method (e.g., avoid generating multiple risottos or similar dishes).\n      Provide the following in a structured format:\n      - Title (prefix with a single #, e.g., # Recipe Title)\n      - Description (2-3 sentences under the title)\n      - Ingredients (list each ingredient with quantities under a ## Ingredients heading)\n      - Instructions (list step-by-step under a ## Instructions heading)\n      - Tips or variations (optional, under a ## Tips heading)\n    `;\n\n    // Generate 6 recipes\n    const recipesPromises = Array.from({ length: 6 }, async (_, index) => {\n      try {\n        const prompt = `${promptBase} Recipe ${index + 1} of 6.`;\n        this.logger.log(`Sending request ${index + 1}/6 to Gemini API...`);\n        const result = await model.generateContent(prompt);\n        this.logger.log(`Received response ${index + 1}/6 from Gemini API.`);\n\n        const text = result.response.text();\n        // Parse the response text\n        const titleMatch = text.match(/^# (.+)/m);\n        const title = titleMatch ? titleMatch[1].trim() : `Untitled Recipe ${index + 1}`;\n\n        const descriptionMatch = text.match(/^# .+\\n([\\s\\S]+?)(?=\\n## )/m);\n        const description = descriptionMatch\n          ? descriptionMatch[1].trim().slice(0, 100) + '...'\n          : 'No description available.';\n\n        const ingredientsMatch = text.match(/## Ingredients\\n([\\s\\S]+?)(?=\\n## )/m);\n        const ingredients = ingredientsMatch\n          ? ingredientsMatch[1]\n              .split('\\n')\n              .map(line => line.trim())\n              .filter(line => line && !line.startsWith('##'))\n          : [];\n\n        const instructionsMatch = text.match(/## Instructions\\n([\\s\\S]+?)(?=\\n## |$)/m);\n        const instructions = instructionsMatch\n          ? instructionsMatch[1]\n              .split('\\n')\n              .map(line => line.trim())\n              .filter(line => line && !line.startsWith('##'))\n          : [];\n\n        return {\n          title,\n          description: `${description} (Recipe ${index + 1} of 6)`,\n          ingredients,\n          instructions,\n          score: (this.votes[index]?.up || 0) - (this.votes[index]?.down || 0),\n        };\n      } catch (error) {\n        this.logger.error(`Failed to generate recipe ${index + 1}:`, error);\n        return {\n          title: `Error Recipe ${index + 1}`,\n          description: 'Failed to generate recipe.',\n          ingredients: [],\n          instructions: [],\n          score: 0,\n        };\n      }\n    });\n\n    const recipes = await Promise.all(recipesPromises);\n    // Sort recipes by score (descending)\n    recipes.sort((a, b) => b.score - a.score);\n    return recipes;\n  }\n\n  async updateVote(recipeId: number, vote: 'up' | 'down') {\n    if (!this.votes[recipeId]) {\n      this.votes[recipeId] = { up: 0, down: 0 };\n    }\n    if (vote === 'up') {\n      this.votes[recipeId].up += 1;\n    } else if (vote === 'down') {\n      this.votes[recipeId].down += 1;\n    }\n    this.logger.log(`Updated vote for recipe ${recipeId}: ${JSON.stringify(this.votes[recipeId])}`);\n  }\n}\n","module.exports = require(\"@google/generative-ai\");","import { Recipe } from '../app/recipes/recipes.service';\n\nexport const generateMockRecipes = (ingredients: string, cuisine: string, dietary: string): Recipe[] => {\n  const ingredientList = ingredients.split(',').map(item => item.trim());\n\n  return [\n    {\n      title: `${cuisine || 'Global'} Stuffed Peppers with Rice`,\n      description: `A hearty ${cuisine || 'global'} dish where peppers are stuffed with a flavorful rice mixture, baked until tender. Perfect for a ${dietary || 'any'} diet. (Recipe 1 of 6)`,\n      ingredients: [\n        `${ingredientList[0]} (1 cup)`, // rice\n        `${ingredientList[1]} (4 whole, hollowed out)`, // pepper\n        `${ingredientList[2]} (2, diced)`, // tomatoes\n        `${ingredientList[3]} (1, finely chopped)`, // onions\n        'Parmesan cheese (1/2 cup, grated)',\n        'Olive oil (2 tbsp)',\n        'Salt and pepper (to taste)',\n      ],\n      instructions: [\n        'Preheat oven to 375°F (190°C).',\n        'In a pan, heat olive oil and sauté onions until translucent.',\n        'Add diced tomatoes and cook for 5 minutes.',\n        'Mix in cooked rice, Parmesan, salt, and pepper.',\n        'Stuff the hollowed peppers with the rice mixture.',\n        'Place peppers in a baking dish, cover with foil, and bake for 30 minutes.',\n        'Remove foil and bake for another 10 minutes until peppers are tender.',\n      ],\n      score: 0,\n    },\n    {\n      title: `${cuisine || 'Global'} Tomato and Pepper Risotto`,\n      description: `A creamy ${dietary || 'standard'} risotto bursting with the flavors of fresh tomatoes and peppers. This classic ${cuisine || 'global'} dish is comforting and flavorful. (Recipe 2 of 6)`,\n      ingredients: [\n        `${ingredientList[0]} (1 cup, Arborio)`, // rice\n        `${ingredientList[1]} (2, diced)`, // pepper\n        `${ingredientList[2]} (3, chopped)`, // tomatoes\n        `${ingredientList[3]} (1, sliced)`, // onions\n        'Vegetable broth (4 cups)',\n        'White wine (1/2 cup)',\n        'Garlic (2 cloves, minced)',\n      ],\n      instructions: [\n        'Heat vegetable broth in a pot and keep it warm.',\n        'In a large pan, sauté onions and garlic in olive oil until soft.',\n        'Add peppers and tomatoes, cooking for 5 minutes.',\n        'Stir in Arborio rice and cook for 2 minutes.',\n        'Add white wine and stir until absorbed.',\n        'Gradually add warm broth, one ladle at a time, stirring until absorbed, for about 20 minutes.',\n        'Season with salt and serve hot.',\n      ],\n      score: 0,\n    },\n    {\n      title: `${cuisine || 'Global'} Rice Salad with Peppers and Tomatoes`,\n      description: `A refreshing ${dietary || 'standard'} rice salad with vibrant peppers and tomatoes, perfect for a light meal. Tossed with a simple olive oil dressing. (Recipe 3 of 6)`,\n      ingredients: [\n        `${ingredientList[0]} (1 cup, cooked)`, // rice\n        `${ingredientList[1]} (2, chopped)`, // pepper\n        `${ingredientList[2]} (2, diced)`, // tomatoes\n        `${ingredientList[3]} (1/2, finely chopped)`, // onions\n        'Fresh basil (1/4 cup, chopped)',\n        'Olive oil (3 tbsp)',\n        'Lemon juice (2 tbsp)',\n      ],\n      instructions: [\n        'Cook rice according to package instructions and let it cool.',\n        'In a large bowl, combine cooled rice, peppers, tomatoes, and onions.',\n        'Add chopped basil to the mixture.',\n        'In a small bowl, whisk olive oil and lemon juice to make a dressing.',\n        'Pour the dressing over the salad and toss well.',\n        'Chill in the fridge for 30 minutes before serving.',\n        'Garnish with extra basil if desired.',\n      ],\n      score: 0,\n    },\n    {\n      title: `${cuisine || 'Global'} Grilled Vegetable and Rice Bowl`,\n      description: `A simple ${dietary || 'standard'} bowl featuring grilled peppers and tomatoes, served over rice. A healthy and flavorful ${cuisine || 'global'} dish. (Recipe 4 of 6)`,\n      ingredients: [\n        `${ingredientList[0]} (1 cup, cooked)`, // rice\n        `${ingredientList[1]} (3, sliced)`, // pepper\n        `${ingredientList[2]} (2, halved)`, // tomatoes\n        `${ingredientList[3]} (1, sliced)`, // onions\n        'Balsamic vinegar (2 tbsp)',\n        'Olive oil (2 tbsp)',\n        'Italian seasoning (1 tsp)',\n      ],\n      instructions: [\n        'Preheat a grill or grill pan to medium heat.',\n        'Toss peppers, tomatoes, and onions with olive oil and Italian seasoning.',\n        'Grill the vegetables for 5-7 minutes until charred and tender.',\n        'Cook rice according to package instructions.',\n        'In a bowl, layer the cooked rice and top with grilled vegetables.',\n        'Drizzle with balsamic vinegar.',\n        'Serve warm with a sprinkle of fresh herbs if desired.',\n      ],\n      score: 0,\n    },\n    {\n      title: `${cuisine || 'Global'} Pepper and Tomato Soup with Rice`,\n      description: `A comforting ${dietary || 'standard'} soup with peppers, tomatoes, and rice, infused with ${cuisine || 'global'} herbs. Perfect for a cozy meal. (Recipe 5 of 6)`,\n      ingredients: [\n        `${ingredientList[0]} (1/2 cup)`, // rice\n        `${ingredientList[1]} (2, diced)`, // pepper\n        `${ingredientList[2]} (4, chopped)`, // tomatoes\n        `${ingredientList[3]} (1, chopped)`, // onions\n        'Vegetable broth (4 cups)',\n        'Garlic (3 cloves, minced)',\n        'Dried oregano (1 tsp)',\n      ],\n      instructions: [\n        'In a large pot, heat olive oil and sauté onions and garlic until fragrant.',\n        'Add peppers and tomatoes, cooking for 5 minutes.',\n        'Pour in vegetable broth and add oregano.',\n        'Bring to a boil, then reduce heat and simmer for 15 minutes.',\n        'Add rice and cook for another 10 minutes until tender.',\n        'Season with salt and pepper to taste.',\n        'Serve hot with crusty bread.',\n      ],\n      score: 0,\n    },\n    {\n      title: `${cuisine || 'Global'} Rice and Vegetable Frittata`,\n      description: `A ${dietary || 'standard'} frittata packed with rice, peppers, and tomatoes, baked with eggs for a hearty ${cuisine || 'global'} dish. Great for brunch or dinner. (Recipe 6 of 6)`,\n      ingredients: [\n        `${ingredientList[0]} (1 cup, cooked)`, // rice\n        `${ingredientList[1]} (2, diced)`, // pepper\n        `${ingredientList[2]} (2, diced)`, // tomatoes\n        `${ingredientList[3]} (1, finely chopped)`, // onions\n        'Eggs (6, beaten)',\n        'Mozzarella cheese (1/2 cup, shredded)',\n        'Olive oil (2 tbsp)',\n      ],\n      instructions: [\n        'Preheat oven to 350°F (175°C).',\n        'In an oven-safe skillet, heat olive oil and sauté onions, peppers, and tomatoes for 5 minutes.',\n        'Add cooked rice and stir to combine.',\n        'Pour beaten eggs over the mixture, ensuring even distribution.',\n        'Sprinkle mozzarella cheese on top.',\n        'Bake in the oven for 15-20 minutes until the eggs are set.',\n        'Slice and serve warm.',\n      ],\n      score: 0,\n    },\n  ];\n};\n","import { Controller, Get, Post, Body, HttpException, HttpStatus } from '@nestjs/common';\nimport { RecipesService } from './recipes.service';\n\n@Controller('api')\nexport class RecipesController {\n  constructor(private readonly recipesService: RecipesService) {}\n\n  @Get()\n  getWelcome() {\n    return 'Welcome to MyCookingAI API';\n  }\n\n  @Post('generate-recipes')\n  async generateRecipes(\n    @Body() body: { ingredients: string; cuisine: string; dietary?: string }\n  ) {\n    const { ingredients, cuisine, dietary } = body;\n\n    if (!ingredients) {\n      throw new HttpException('Ingredients are required', HttpStatus.BAD_REQUEST);\n    }\n\n    try {\n      console.log('API: Received request with body:', { ingredients, cuisine, dietary });\n      const recipes = await this.recipesService.generateRecipes(ingredients, cuisine, dietary);\n      console.log('API: Generated recipes:', recipes);\n      return recipes;\n    } catch (error) {\n      console.error('API: Error generatingLOGO recipes:', error);\n      throw new HttpException('Failed to generate recipes', HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  @Post('vote')\n  async vote(\n    @Body() body: { recipeId: number; vote: 'up' | 'down' }\n  ) {\n    const { recipeId, vote } = body;\n\n    if (!recipeId || !vote || (vote !== 'up' && vote !== 'down')) {\n      throw new HttpException('Invalid vote request', HttpStatus.BAD_REQUEST);\n    }\n\n    try {\n      await this.recipesService.updateVote(recipeId, vote);\n      return { success: true };\n    } catch (error) {\n      console.error('API: Error updating vote:', error);\n      throw new HttpException('Failed to update vote', HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n","module.exports = require(\"dotenv\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\nimport * as dotenv from 'dotenv';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as net from 'net';\n\n// Try multiple possible locations for the .env file\nconst possiblePaths = [\n  path.resolve(process.cwd(), '.env'),\n  path.resolve(__dirname, '.env'),\n  path.resolve(__dirname, '..', '.env'),\n  path.resolve(__dirname, '..', '..', '.env'),\n  path.resolve(__dirname, '..', '..', '..', '.env'),\n  path.resolve(__dirname, '..', '..', '..', '..', '.env'),\n  path.resolve(process.cwd(), 'apps', 'cooking-ai-api', '.env'),\n];\n\nlet envFilePath = null;\nfor (const filePath of possiblePaths) {\n  if (fs.existsSync(filePath)) {\n    envFilePath = filePath;\n    console.log(`Found .env file at: ${filePath}`);\n    break;\n  }\n}\n\nif (envFilePath) {\n  const result = dotenv.config({ path: envFilePath });\n  if (result.error) {\n    console.error(`Error loading .env file: ${result.error.message}`);\n  } else {\n    console.log('Successfully loaded .env file');\n  }\n} else {\n  console.warn('No .env file found in any of the possible locations');\n}\n\nconsole.log('GEMINI_API_KEY is', process.env.GEMINI_API_KEY ? 'set' : 'not set');\n\nasync function findAvailablePort(startPort: number): Promise<number> {\n  return new Promise((resolve, reject) => {\n    const server = net.createServer();\n    server.listen(startPort, '0.0.0.0');\n    server.on('listening', () => {\n      const address = server.address();\n      if (address && typeof address === 'object') {\n        const port = address.port;\n        server.close(() => {\n          console.log(`Port ${port} is available`);\n          resolve(port);\n        });\n      }\n    });\n    server.on('error', (err: any) => {\n      if (err.code === 'EADDRINUSE') {\n        console.log(`Port ${startPort} is in use, trying ${startPort + 1}`);\n        server.close(() => {\n          findAvailablePort(startPort + 1).then(resolve).catch(reject);\n        });\n      } else {\n        reject(err);\n      }\n    });\n  });\n}\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  \n  app.enableCors({\n    origin: '*', // Allow all origins for now (temporary for debugging)\n    methods: 'GET,POST,OPTIONS',\n    allowedHeaders: 'Content-Type,Authorization',\n    credentials: true,\n    maxAge: 86400,\n  });\n\n  const port = await findAvailablePort(3001);\n  await app.listen(port, '0.0.0.0');\n  console.log(`API is listening on port ${port}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}